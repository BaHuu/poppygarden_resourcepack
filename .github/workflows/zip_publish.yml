name: Zip and Publish Release

on:
  push:
    branches: [ main ]

jobs:

  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Zip Repository
      run: |
        VERSION=$(date +"%Y-%m-%d-%H-%M-%S")
        zip -r "${{ github.repository }}_${VERSION}.zip" .
        
    - name: Check for Existing Tag
      id: check_tag
      run: |
        VERSION=$(date +"%Y-%m-%d-%H-%M-%S")
        TAG_EXISTS=true
        COUNT=0
      
        while [ "$TAG_EXISTS" = true ]; do
          if [ $COUNT -eq 0 ]; then
            TAG="$VERSION"
          else
            TAG="$VERSION-$COUNT"
          fi
      
          if git rev-parse "refs/tags/$TAG" >/dev/null 2>&1; then
            COUNT=$((COUNT + 1))
          else
            TAG_EXISTS=false
          fi
        done
      
        echo "::set-output name=RELEASE_TAG::$TAG"
        
    - name: Get Release Name
      id: get_name
      run: |
        echo "::set-output name=RELEASE_NAME::Release ${{ steps.check_tag.outputs.RELEASE_TAG }}"
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.check_tag.outputs.RELEASE_TAG }}
        release_name: ${{ steps.get_name.outputs.RELEASE_NAME }}
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ github.repository }}_${{ steps.check_tag.outputs.RELEASE_TAG }}.zip
        asset_name: ${{ github.repository }}_${{ steps.check_tag.outputs.RELEASE_TAG }}.zip
        asset_content_type: application/zip
        
    - name: Create Latest Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: ncipollo/release-action@v1
      with:
        artifacts: '${{ github.repository }}_${{ steps.check_tag.outputs.RELEASE_TAG }}.zip'
        tag: latest
        name: Latest Release
        token: ${{ secrets.GITHUB_TOKEN }}
